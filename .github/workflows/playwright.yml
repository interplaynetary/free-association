name: Playwright E2E Tests

on:
  push:
    branches: [main, master, capacities]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.cursor/**'
  pull_request:
    branches: [main, master, capacities]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.cursor/**'

jobs:
  test:
    name: Run Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Run tests on multiple Node versions for broader compatibility
        node-version: [20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Install Playwright Browsers
        run: bunx playwright install --with-deps
      
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      
      - name: Build application
        run: bun run build
      
      - name: Run Playwright tests
        run: bun run test:e2e
        env:
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      - name: Upload test screenshots and traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-failures
          path: |
            test-results/
            playwright-report/
          retention-days: 7
      
      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: daun/playwright-report-comment@v3
        with:
          report-path: playwright-report
          report-url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  # Optional: Run accessibility tests separately for better organization
  accessibility:
    name: Accessibility Tests
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Install Playwright Browsers
        run: bunx playwright install --with-deps chromium
      
      - name: Build application
        run: bun run build
      
      - name: Run accessibility tests
        run: bunx playwright test accessibility.e2e.ts --project=chromium
        env:
          CI: true
      
      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: playwright-report/
          retention-days: 30

  # Optional: Run visual regression tests
  visual-regression:
    name: Visual Regression Tests
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Install Playwright Browsers
        run: bunx playwright install --with-deps
      
      - name: Build application
        run: bun run build
      
      - name: Run visual regression tests
        run: bunx playwright test --update-snapshots --grep "@visual"
        env:
          CI: true
      
      - name: Upload visual diffs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-diffs
          path: test-results/
          retention-days: 7

  # Performance testing with Lighthouse (disabled until .lighthouserc.js is configured)
  # lighthouse:
  #   name: Lighthouse Performance Tests
  #   timeout-minutes: 20
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Setup Bun
  #       uses: oven-sh/setup-bun@v2
  #       with:
  #         bun-version: latest
  #     
  #     - name: Install dependencies
  #       run: bun install --frozen-lockfile
  #     
  #     - name: Build application
  #       run: bun run build
  #     
  #     - name: Start preview server
  #       run: |
  #         bun run preview &
  #         sleep 5
  #     
  #     - name: Run Lighthouse CI
  #       run: |
  #         npm install -g @lhci/cli@0.13.x
  #         lhci autorun --collect.url=http://localhost:4173 --upload.target=temporary-public-storage
  #       env:
  #         LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      
      # - name: Upload Lighthouse results
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: lighthouse-results
      #     path: .lighthouseci/
      #     retention-days: 30

