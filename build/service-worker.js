const a=location.pathname.split("/").slice(0,-1).join("/"),c=[a+"/_app/immutable/entry/app.uMUI-en9.js",a+"/_app/immutable/nodes/0.BrsiNvp2.js",a+"/_app/immutable/assets/0.8rm7yGze.css",a+"/_app/immutable/assets/fira-mono-cyrillic-ext-400-normal.FAIU8e3o.woff2",a+"/_app/immutable/assets/fira-mono-cyrillic-ext-400-normal.Co4MVjrD.woff",a+"/_app/immutable/assets/fira-mono-cyrillic-400-normal.BJkDdjbt.woff2",a+"/_app/immutable/assets/fira-mono-cyrillic-400-normal.DUd3efVn.woff",a+"/_app/immutable/assets/fira-mono-greek-ext-400-normal.Be4g_LSk.woff2",a+"/_app/immutable/assets/fira-mono-greek-ext-400-normal.BQ5yw6bY.woff",a+"/_app/immutable/assets/fira-mono-greek-400-normal.ftNhKy_S.woff2",a+"/_app/immutable/assets/fira-mono-greek-400-normal.B_0AmgK7.woff",a+"/_app/immutable/assets/fira-mono-symbols2-400-normal.C6JptOil.woff2",a+"/_app/immutable/assets/fira-mono-symbols2-400-normal.CpeG9ob9.woff",a+"/_app/immutable/assets/fira-mono-latin-ext-400-normal.B2gPvaNr.woff2",a+"/_app/immutable/assets/fira-mono-latin-ext-400-normal.CbD3vWRE.woff",a+"/_app/immutable/assets/fira-mono-latin-400-normal.DVTTRLHv.woff2",a+"/_app/immutable/assets/fira-mono-latin-400-normal.C3FQ26ho.woff",a+"/_app/immutable/nodes/1.VZVDXks-.js",a+"/_app/immutable/nodes/2.CbyA4Zku.js",a+"/_app/immutable/assets/2.CrKj0bqC.css",a+"/_app/immutable/nodes/3.DxqtaP3U.js",a+"/_app/immutable/assets/3.Cr_xTglE.css",a+"/_app/immutable/nodes/4.DOz5tkyu.js",a+"/_app/immutable/assets/4.g7iyU9NP.css",a+"/_app/immutable/nodes/5.BJ-FETEM.js",a+"/_app/immutable/assets/5.DOOq4yFv.css",a+"/_app/immutable/chunks/B7lT0JqY.js",a+"/_app/immutable/chunks/BDgML0BG.js",a+"/_app/immutable/assets/Bar.ILoyXE1t.css",a+"/_app/immutable/chunks/CDdn25_i.js",a+"/_app/immutable/chunks/CF2fgOQ-.js",a+"/_app/immutable/chunks/COHNfflA.js",a+"/_app/immutable/chunks/CTWqj-6B.js",a+"/_app/immutable/assets/global.BeB-ITtk.css",a+"/_app/immutable/chunks/CUh_UXd4.js",a+"/_app/immutable/chunks/CeHmE_4k.js",a+"/_app/immutable/chunks/DNHPwvaD.js",a+"/_app/immutable/chunks/Dp1pzeXC.js",a+"/_app/immutable/chunks/QfZ2FcrX.js",a+"/_app/immutable/chunks/ZjNQrdaN.js",a+"/_app/immutable/chunks/dlUFelYR.js",a+"/_app/immutable/chunks/eaQsrxS5.js",a+"/_app/immutable/entry/start.DAtaHZQ_.js",a+"/_app/immutable/chunks/DUTOXKKD.js"],r=[a+"/.nojekyll",a+"/favicon.png",a+"/manifest.json",a+"/robots.txt"],u="1750788607246",o=`cache-${u}`,l=[...c,...r];self.addEventListener("install",s=>{async function t(){await(await caches.open(o)).addAll(l)}s.waitUntil(t())});self.addEventListener("activate",s=>{async function t(){for(const n of await caches.keys())n!==o&&await caches.delete(n)}s.waitUntil(t())});self.addEventListener("fetch",s=>{if(s.request.method!=="GET")return;async function t(){const n=new URL(s.request.url),i=await caches.open(o);if(l.includes(n.pathname)){const e=await i.match(n.pathname);if(e)return e}try{const e=await fetch(s.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&i.put(s.request,e.clone()),e}catch(e){const m=await i.match(s.request);if(m)return m;throw e}}s.respondWith(t())});self.addEventListener("sync",s=>{s.tag==="background-sync"&&s.waitUntil(p())});async function p(){console.log("Background sync triggered"),Notification.permission==="granted"&&self.registration.showNotification("Playnet",{body:"Background sync completed",icon:"/favicon.png",tag:"background-sync"})}self.addEventListener("notificationclick",s=>{s.notification.close(),s.waitUntil(clients.matchAll().then(t=>t.length>0?t[0].focus():clients.openWindow("/")))});self.addEventListener("periodicsync",s=>{s.tag==="daily-sync"&&s.waitUntil(p())});
