const a=location.pathname.split("/").slice(0,-1).join("/"),p=[a+"/_app/immutable/entry/app.DG2KnyBd.js",a+"/_app/immutable/nodes/0.BV00hA4Y.js",a+"/_app/immutable/assets/0.DPCHrIca.css",a+"/_app/immutable/assets/fira-mono-cyrillic-ext-400-normal.FAIU8e3o.woff2",a+"/_app/immutable/assets/fira-mono-cyrillic-ext-400-normal.Co4MVjrD.woff",a+"/_app/immutable/assets/fira-mono-cyrillic-400-normal.BJkDdjbt.woff2",a+"/_app/immutable/assets/fira-mono-cyrillic-400-normal.DUd3efVn.woff",a+"/_app/immutable/assets/fira-mono-greek-ext-400-normal.Be4g_LSk.woff2",a+"/_app/immutable/assets/fira-mono-greek-ext-400-normal.BQ5yw6bY.woff",a+"/_app/immutable/assets/fira-mono-greek-400-normal.ftNhKy_S.woff2",a+"/_app/immutable/assets/fira-mono-greek-400-normal.B_0AmgK7.woff",a+"/_app/immutable/assets/fira-mono-symbols2-400-normal.C6JptOil.woff2",a+"/_app/immutable/assets/fira-mono-symbols2-400-normal.CpeG9ob9.woff",a+"/_app/immutable/assets/fira-mono-latin-ext-400-normal.B2gPvaNr.woff2",a+"/_app/immutable/assets/fira-mono-latin-ext-400-normal.CbD3vWRE.woff",a+"/_app/immutable/assets/fira-mono-latin-400-normal.DVTTRLHv.woff2",a+"/_app/immutable/assets/fira-mono-latin-400-normal.C3FQ26ho.woff",a+"/_app/immutable/nodes/1.DHS8y6R_.js",a+"/_app/immutable/nodes/2.COUfI-9C.js",a+"/_app/immutable/assets/2.CHlPv098.css",a+"/_app/immutable/nodes/3.Dk2hLptM.js",a+"/_app/immutable/assets/3.Cr_xTglE.css",a+"/_app/immutable/nodes/4.DOz5tkyu.js",a+"/_app/immutable/assets/4.g7iyU9NP.css",a+"/_app/immutable/nodes/5.BJ-FETEM.js",a+"/_app/immutable/assets/5.DOOq4yFv.css",a+"/_app/immutable/chunks/6qSDsJxn.js",a+"/_app/immutable/assets/colorUtils.BeB-ITtk.css",a+"/_app/immutable/chunks/BB5yi0xz.js",a+"/_app/immutable/assets/Bar.ILoyXE1t.css",a+"/_app/immutable/chunks/BDgML0BG.js",a+"/_app/immutable/chunks/BWqOPg7E.js",a+"/_app/immutable/chunks/CDdn25_i.js",a+"/_app/immutable/chunks/CF2fgOQ-.js",a+"/_app/immutable/chunks/COHNfflA.js",a+"/_app/immutable/chunks/CTLQGSEP.js",a+"/_app/immutable/chunks/CUh_UXd4.js",a+"/_app/immutable/chunks/DNHPwvaD.js",a+"/_app/immutable/chunks/Dp1pzeXC.js",a+"/_app/immutable/chunks/ZjNQrdaN.js",a+"/_app/immutable/chunks/dlUFelYR.js",a+"/_app/immutable/chunks/eaQsrxS5.js",a+"/_app/immutable/entry/start.D_nE3gc5.js",a+"/_app/immutable/chunks/DUTOXKKD.js"],r=[a+"/.nojekyll",a+"/favicon.png",a+"/manifest.json",a+"/robots.txt"],f="1750799504351",o=`cache-${f}`,m=[...p,...r];self.addEventListener("install",s=>{async function t(){await(await caches.open(o)).addAll(m)}s.waitUntil(t())});self.addEventListener("activate",s=>{async function t(){for(const n of await caches.keys())n!==o&&await caches.delete(n)}s.waitUntil(t())});self.addEventListener("fetch",s=>{if(s.request.method!=="GET")return;async function t(){const n=new URL(s.request.url),i=await caches.open(o);if(m.includes(n.pathname)){const e=await i.match(n.pathname);if(e)return e}try{const e=await fetch(s.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&i.put(s.request,e.clone()),e}catch(e){const l=await i.match(s.request);if(l)return l;throw e}}s.respondWith(t())});self.addEventListener("sync",s=>{s.tag==="background-sync"&&s.waitUntil(c())});async function c(){if(console.log("Background sync triggered"),Notification.permission==="granted"){const s=self.registration.scope.replace(self.location.origin,"").replace(/\/$/,"");self.registration.showNotification("Playnet",{body:"Background sync completed",icon:`${s}/favicon.png`,tag:"background-sync"})}}self.addEventListener("notificationclick",s=>{s.notification.close(),s.waitUntil(clients.matchAll().then(t=>{if(t.length>0)return t[0].focus();const n=self.registration.scope.replace(self.location.origin,"").replace(/\/$/,"");return clients.openWindow(n||"/")}))});self.addEventListener("periodicsync",s=>{s.tag==="daily-sync"&&s.waitUntil(c())});
